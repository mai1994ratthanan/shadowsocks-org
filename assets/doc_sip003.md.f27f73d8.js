import{_ as e,c as s,o as a,R as o}from"./chunks/framework.bdd825cc.js";const f=JSON.parse('{"title":"SIP003: A simplified plugin design for shadowsocks","description":"","frontmatter":{},"headers":[],"relativePath":"doc/sip003.md","filePath":"doc/sip003.md","lastUpdated":1716021594000}'),n={name:"doc/sip003.md"},t=o(`<h1 id="sip003-a-simplified-plugin-design-for-shadowsocks" tabindex="-1">SIP003: A simplified plugin design for shadowsocks <a class="header-anchor" href="#sip003-a-simplified-plugin-design-for-shadowsocks" aria-label="Permalink to &quot;SIP003: A simplified plugin design for shadowsocks&quot;">​</a></h1><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h2><p>The plugin of shadowsocks is very similar to the <a href="https://gitweb.torproject.org/torspec.git/tree/pt-spec.txt" target="_blank" rel="noreferrer">Pluggable Transport</a> plugins from Tor project. Unlike the SOCKS5 proxy design in PT, every SIP003 plugin works as a tunnel (or called local port forwarding). This design aims to avoid per-connection arguments in PT, leading to much easier implementation.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">+------------+                    +---------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">|  SS Client +-- Local Loopback --+  Plugin Client (Tunnel)   +--+</span></span>
<span class="line"><span style="color:#A6ACCD;">+------------+                    +---------------------------+  |</span></span>
<span class="line"><span style="color:#A6ACCD;">                                                                 |</span></span>
<span class="line"><span style="color:#A6ACCD;">            Public Internet (Obfuscated/Transformed traffic) ==&gt; |</span></span>
<span class="line"><span style="color:#A6ACCD;">                                                                 |</span></span>
<span class="line"><span style="color:#A6ACCD;">+------------+                    +---------------------------+  |</span></span>
<span class="line"><span style="color:#A6ACCD;">|  SS Server +-- Local Loopback --+  Plugin Server (Tunnel)   +--+</span></span>
<span class="line"><span style="color:#A6ACCD;">+------------+                    +---------------------------+</span></span></code></pre></div><h2 id="life-cycle-of-a-plugin" tabindex="-1">Life cycle of a plugin <a class="header-anchor" href="#life-cycle-of-a-plugin" aria-label="Permalink to &quot;Life cycle of a plugin&quot;">​</a></h2><p>Very similar to PT, the plugin client/server is started as child process of shadowsocks client/server.</p><p>If any error happens, the child process of plugin should exit with a error code. Then, the parent process of shadowsocks stops as well (SIGCHLD).</p><p>When a shadowsocks client/server is stopped by user, the child process of plugin will also be terminated.</p><h2 id="passing-arguments-to-a-plugin" tabindex="-1">Passing arguments to a plugin <a class="header-anchor" href="#passing-arguments-to-a-plugin" aria-label="Permalink to &quot;Passing arguments to a plugin&quot;">​</a></h2><p>A plugin accepts arguments through environment variables.</p><p>a. Four <strong>MUST-HAVE</strong> environment variables are <code>SS_REMOTE_HOST</code>, <code>SS_REMOTE_PORT</code>, <code>SS_LOCAL_HOST</code> and <code>SS_LOCAL_PORT</code>. <code>SS_REMOTE_HOST</code> and <code>SS_REMOTE_PORT</code> are the hostname and port of the remote plugin service. <code>SS_LOCAL_HOST</code> and <code>SS_LOCAL_PORT</code> are the hostname and port of the local shadowsocks or plugin service.</p><p>b. One <strong>OPTIONAL</strong> environment variable is <code>SS_PLUGIN_OPTIONS</code>. If a plugin requires additional arguments, like path to a config file, these arguments can be passed as extra options in a formatted string. An example is &#39;obfs=http;obfs-host=www.baidu.com&#39;, where semicolons, equal signs and backslashes <strong>MUST</strong> be escaped with a backslash.</p><h2 id="compatibility-with-pt" tabindex="-1">Compatibility with PT <a class="header-anchor" href="#compatibility-with-pt" aria-label="Permalink to &quot;Compatibility with PT&quot;">​</a></h2><p>For all the plugins from Tor projects, there are two possible ways to support them. 1) We can fork these plugins and modify them to support SIP003, e.g. <a href="https://github.com/madeye/obfs4-tunnel" target="_blank" rel="noreferrer">obfs4-tunnel</a>. 2) Implement a adapter of PT as SIP003 plugin.</p><h2 id="licenses-of-plugins" tabindex="-1">Licenses of plugins <a class="header-anchor" href="#licenses-of-plugins" aria-label="Permalink to &quot;Licenses of plugins&quot;">​</a></h2><p>As all plugin services should run in a separate process, they can pick any license they like. There is no GPL restrictions for any plugin providers.</p><h2 id="restrictions" tabindex="-1">Restrictions <a class="header-anchor" href="#restrictions" aria-label="Permalink to &quot;Restrictions&quot;">​</a></h2><p>a. Plugin over plugin is NOT supported. Only one plugin can be enabled when a shadowsocks service is started. If you really need this feature, implement a plugin-over-plugin transport as a SIP003 plugin. b. Only TCP traffic is forwarded. For now, there is no plan to support UDP traffic forwarding.</p><h2 id="example-projects" tabindex="-1">Example projects <a class="header-anchor" href="#example-projects" aria-label="Permalink to &quot;Example projects&quot;">​</a></h2><ul><li>A SIP003 plugin for traffic obfuscating: <a href="https://github.com/shadowsocks/simple-obfs" target="_blank" rel="noreferrer">simple-obfs</a>.</li><li>A shadowsocks implementation supporting SIP003: <a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noreferrer">shadowsocks/shadowsocks-libev</a>.</li></ul><h2 id="command-line-example" tabindex="-1">Command line example <a class="header-anchor" href="#command-line-example" aria-label="Permalink to &quot;Command line example&quot;">​</a></h2><p>On the server:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ss-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--plugin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">obfs-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--plugin-opts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">obfs=http</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>On the client:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ss-local</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config.json</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--plugin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">obfs-local</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--plugin-opts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">obfs=http;obfs-host=www.baidu.com</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="known-good-sip003-plugins" tabindex="-1">Known good SIP003 plugins <a class="header-anchor" href="#known-good-sip003-plugins" aria-label="Permalink to &quot;Known good SIP003 plugins&quot;">​</a></h2><ul><li>GoQuiet: <a href="https://github.com/cbeuw/GoQuiet" target="_blank" rel="noreferrer">https://github.com/cbeuw/GoQuiet</a></li><li>Cloak: <a href="https://github.com/cbeuw/Cloak" target="_blank" rel="noreferrer">https://github.com/cbeuw/Cloak</a></li><li>Kcptun: <a href="https://github.com/shadowsocks/kcptun" target="_blank" rel="noreferrer">https://github.com/shadowsocks/kcptun</a></li><li>V2ray-plugin: <a href="https://github.com/shadowsocks/v2ray-plugin" target="_blank" rel="noreferrer">https://github.com/shadowsocks/v2ray-plugin</a></li></ul>`,27),l=[t];function r(i,p,c,h,d,u){return a(),s("div",null,l)}const m=e(n,[["render",r]]);export{f as __pageData,m as default};
